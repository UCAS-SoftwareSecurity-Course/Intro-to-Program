id: program-lab

name: "„ÄêËØæÁ®ãÂÆûË∑µ1ÔºöÁ®ãÂ∫èÁîüÊàê‰∏éËøêË°å„Äë"

description: |
  ËØæÁ®ãÂÆûË∑µ1Ôºå‰∏ªË¶ÅÂÜÖÂÆπ‰∏∫Á®ãÂ∫èÁîüÊàê‰∏éËøêË°åÔºåÂåÖÊã¨Á®ãÂ∫èÁöÑÈ¢ÑÂ§ÑÁêÜ„ÄÅÁºñËØë„ÄÅÊ±áÁºñ„ÄÅÈìæÊé•„ÄÅÊâßË°åÁ≠âÂÜÖÂÆπ„ÄÇ

type: topic

award:
  emoji: üòÄ

modules:

  - id: preprocess
    name: ÂçïÂÖÉ1.1ÔºöÈ¢ÑÂ§ÑÁêÜ
    description: Welcome to the Preprocess module. In this module, you will learn some common techniques in C/C++ preprocess.

    challenges:
      - id: level1
        name: "1.1.1"
        description: Your first challenge, hope you enjoy it.

      - id: level2
        name: "1.1.2"
        description: try to `#define` constants.
      
      - id: level3
        name: "1.1.3"
        description: try to `#define` strings.
      
      - id: level4
        name: "1.1.4"
        description: try to `#define` functions and variables.
      
      - id: level5
        name: "1.1.5"
        description: do-while-zero macro is a common trick.
      
      - id: level6
        name: "1.1.6"
        description: conditional compilation is also a common technique.
      
      - id: level7
        name: "1.1.7"
        description: do you know `#include`?
      
      - id: level8
        name: "1.1.8"
        description: handle `#ifdef` and `#ifndef` correctly.

  - id: compilation
    name: ÂçïÂÖÉ1.2ÔºöÁºñËØë
    description: Welcome to the Compilation module, in this module, you will learn multiple compilation steps and learn basic knowledge about clang AST and LLVM IR.

    challenges:
      - id: level9
        name: "1.2.1"
        description: basic assignment and arithmetic operations in clang AST.
      
      - id: level10
        name: "1.2.2"
        description: array and pointer operations in clang AST.
      
      - id: level11
        name: "1.2.3"
        description: control flow operations in clang AST.
      
      - id: level12
        name: "1.2.4"
        description: struct and field operations in clang AST.
      
      - id: level13
        name: "1.2.5"
        description: loop in clang AST.
      
      - id: level14
        name: "1.2.6"
        description: basic assignment and arithmetic operations in LLVM IR
      
      - id: level15
        name: "1.2.7"
        description: constant string in LLVM IR

      - id: level16
        name: "1.2.8"
        description: array and pointer operations in LLVM IR
      
      - id: level17
        name: "1.2.9"
        description: control flow operations in LLVM IR
      
      - id: level18
        name: "1.2.10"
        description: field operations in LLVM IR
      
      - id: level19
        name: "1.2.11"
        description: loop in LLVM IR
      
      - id: level20
        name: "1.2.12"
        description: static and global variables in LLVM IR
      
      - id: level21
        name: "1.2.13"
        description: do you know how to merge 2 funtions?
      
      - id: level22
        name: "1.2.14"
        description: compilation optimization is performed on (LLVM) IR

      - id: level23
        name: "1.2.15"
        description: compilation optimization is performed on (LLVM) IR
      
      - id: level24
        name: "1.2.16"
        description: compilation optimization is performed on (LLVM) IR
      
      - id: level25
        name: "1.2.17"
        description: try to generate a assembly file from LLVM IR

  - id: assembly
    name: Assembly
    description: Welcome to the Assembly module. In this module, you will learn what is ELF.

    challenges:
      - id: level26
        name: level26
        description: try to compile a embryo ELF object file.
      
      - id: level27
        name: level27
        description: try to compile a baby ELF object file.
      
      - id: level28
        name: level28
        description: try to compile a baby ELF object file with custom section.
      
      - id: level29
        name: level29
        description: explore the ELF header.
      
      - id: level30
        name: level30
        description: explore the ELF Section.
      
      - id: level31
        name: level31
        description: explore the ELF Section Header Table.
      
      - id: level32
        name: level32
        description: explore the ELF Section Header Table.

      - id: level33
        name: level33
        description: what is a `symbol` in ELF?
      
      - id: level34
        name: level34
        description: explore the ELF Symbol Table.

  - id: linking
    name: Linking
    description: Welcome to the Linking module. In this module, you will learn how to link multiple object files into a single executable file.

    challenges:
      - id: level35
        name: level35
        description: try to use `ld` to link multiple object files.
      
      - id: level36
        name: level36
        description: explore how `ld` works.

      - id: level37
        name: level37
        description: try to link multiple object files into a single executable file and make it executable.

  - id: execution
    name: Execution
    description: Welcome to the Execution module. In this module, you will learn how a program is executed and important concepts about memory.

    challenges:
      - id : level38
        name: level38
        description: try to execute a program and explore the memory layout of the program.
      
      - id : level39
        name: level39
        description: explore the program header table of the ELF file.

      - id : level40
        name: level40
        description: introduce the dynamic linking.

      - id : level41
        name: level41
        description: explore plt and got in an ELF executable file.
      
      - id : level42
        name: level42
        description: explore the basic program memory layout.
      
      - id: level43
        name: level43
        description: explore the stack frame of function call.

      - id: level44
        name: level44
        description: explore the calling convention of function call.

      - id: level45
        name: level45
        description: final challenge, try to find memory range of corrsponding `variable` in the process's memory.

  - id: debugger
    name: Debugger [Optional]
    description: Welcome to the Debugger module. In this module, you will learn how to use gdb to debug a program.

    challenges:
      - id : level1
        name: level1
        description: ""

      - id : level2
        name: level2
        description: ""

      - id : level3
        name: level3
        description: ""

      - id : level4
        name: level4
        description: ""

      - id : level5
        name: level5
        description: ""

      - id : level6
        name: level6
        description: ""

      - id : level7
        name: level7
        description: ""

      - id : level8
        name: level8
        description: ""
